plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

sourceCompatibility = 11
compileJava.options.fork = true

// compileJava.options.forkOptions.executable ="/usr/lib/jvm/java-11-openjdk-11.0.3.7-0.el7_6.x86_64/bin/javac"

repositories {
    mavenCentral()
    jcenter()
}
sourceSets {
    main {
        java {
            srcDirs 'src'
        }
    }
}
dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'nl.esciencecenter.xenon', name: 'xenon', version: '3.1.0'
    compile group: 'nl.esciencecenter.xenon.adaptors', name: 'xenon-adaptors-cloud', version: '3.0.2'
//    compile group: 'nl.esciencecenter.xenon.adaptors', name: 'xenon-adaptors-grid', version: '3.0.0'
//    compile group: 'nl.esciencecenter.xenon.adaptors', name: 'xenon-adaptors-hadoop', version: '3.0.0'
}
//jar {
//    manifestContentCharset 'utf-8'
//    metadataCharset 'utf-8'
//    manifest {
//        attributes "Main-Class": "remoteCMD"
//    }
//    from {
//        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
//    }
//}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    include '*'
}
tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:unchecked'
    options.deprecation = true
}
artifacts {
    archives sourcesJar
    archives javadocJar
}

tasks.withType(Jar) {
    destinationDir = file("$rootDir/lib")
}

task copyRuntimeLibs(type: Copy) {
    into "lib"
    from configurations.runtime
}
